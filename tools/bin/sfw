#!/bin/bash
# This script is used to release switch single-firmware correctly!
##########################################################################

CONF_FILE=${PWD}/.sfw.conf
DATE_TIME=$(date +%Y%m%d)
DEST_PATH=${PWD}

##########################################################################
UNDERLINE="\033[4m"
FG_BLACK="\033[30m"
FG_RED="\033[31m"
FG_GREEN="\033[32m"
FG_YELLOW="\033[33m"
FG_BLUE="\033[34m"
FG_PURPLE="\033[35m"
FG_DARKGREEN="\033[36m"
FG_WHITE="\033[37m"
BG_GREEN="\033[42m"
BG_YELLOW="\033[43m"
F6_END="\033[0m"

# TRENDNET
#model_array=(TEG-082WS TEG-204WS TEG-284WS TEG-524WS TPE-082WS TPE-1020WS TPE-1620WS TPE-2840WS TPE-5028WS TPE-5048WS TPE-5240WS TPE-204US)
# CAMEO GENERIC
#model_array=(ESG200-10RS RESERVED ESG200-28RC RESERVED ESG201-10PS-75 RESERVED ESG200-20PC ESG200-28PC-185 ESG200-28PC-370 ESG200-52PC-740 ESG200-52PC-370 RESERVED)
# SOARNEX
#model_array=(RESERVED RESERVED EG210-28-4C EG210-52-4C EG210-10-75W EG210-10-130W EG210-20-185W EG210-28-185W EG210-28-370W EG210-52-740W EG210-52-370W RESERVED)
# SOARNEX DUMB
model_array=(RESERVED RESERVED RESERVED RESERVED EG130-10-75W EG130-10-130W EG130-20-185W RESERVED RESERVED RESERVED RESERVED RESERVED)

# Hardware Version
hw_version=(V2.0R V1.0R V1.0R V1.0R V1.0R V2.0R V2.0R V2.0R V1.0R V1.0R V1.0R)
# Chip Type
chip_type=(RTL8380M RTL8382M RTL8382M RTL8393M RTL8380M RTL8382M RTL8382M RTL8382M RTL8382M RTL8393M RTL8393M)

#proj_path      = "/home/rain/workspace/30284";
#model          = "TEG-30284";
#hw             = "1.0R";
#flash          = "MX25L25635F (32MB)";
#version        = "1.00.B01";
#mib_version    = "1.00.001";
#bootloader     = "1.00.03";
#cpu_chip       = "BCM53346";
#wifi_chip      = "RTL8192";
#wifi           = "";
#dfl_ipaddr     = "192.168.1.254";
#dfl_user_name  = "admin";
#dfl_user_pass  = "admin";
#dfl_admin_name = "Administrator";
#dfl_admin_pass = "password";

print_usage()
{
	echo -e "$FG_PURPLE `basename $0` $FG_YELLOW -- no option           $F6_END"
	echo -e "$FG_PURPLE `basename $0` $FG_YELLOW h | -h -- print usage  $F6_END"
	echo -e "$FG_PURPLE `basename $0` $FG_YELLOW p | -p -- print config $F6_END"
	echo -e "$FG_PURPLE `basename $0` $FG_YELLOW c | -c -- reset config $F6_END"

	exit 0
}

load_config()
{
	if [ -f "$CONF_FILE" ]; then
		. $CONF_FILE
	fi
}

write_config()
{
	echo "proj_path=\"${1:-$proj_path}\"" >  $CONF_FILE
	echo "model=\"${2:-$model}\"" >> $CONF_FILE
	echo "hw=\"${3:-$hw}\"" >> $CONF_FILE
	echo "flash=\"${4:-$flash}\"" >> $CONF_FILE
	echo "version=\"${5:-$version}\"" >> $CONF_FILE
	echo "mib_version=\"${6:-$mib_version}\"" >> $CONF_FILE
	echo "bootloader=\"${7:-$bootloader}\"" >> $CONF_FILE
	echo "cpu_chip=\"${8:-$cpu_chip}\"" >> $CONF_FILE
	echo "wifi_chip=\"${9:-$wifi_chip}\"" >> $CONF_FILE
	echo "wifi=\"${10:-$wifi}\"" >> $CONF_FILE
	echo "dfl_ipaddr=\"${11:-$dfl_ipaddr}\"" >> $CONF_FILE
	echo "dfl_user_name=\"${12:-$dfl_user_name}\"" >> $CONF_FILE
	echo "dfl_user_pass=\"${13:-$dfl_user_pass}\"" >> $CONF_FILE
	echo "dfl_admin_name=\"${14:-$dfl_admin_name}\"" >> $CONF_FILE
	echo "dfl_admin_pass=\"${15:-$dfl_admin_pass}\"" >> $CONF_FILE
}

reset_config()
{
	read -p "Project Path ($proj_path): " _1_
	read -p "Product Model ($model): " _2_
	read -p "Hardware Version ($hw): " _3_
	read -p "Flash Size ($flash): " _4_
	read -p "Firmware Version ($version): " _5_
	read -p "MIB Version ($mib_version): " _6_
	read -p "Bootloader Version ($bootloader): " _7_
	read -p "CPU Chip Version ($cpu_chip): " _8_
	read -p "WiFi Chip Version ($wifi_chip): " _9_
	read -p "WiFi Version ($wifi): " _10_
	read -p "Default IP ($dfl_ipaddr): " _11_
	read -p "Default User Name ($dfl_user_name): " _12_
	read -p "Default User Passwd ($dfl_user_pass): " _13_
	read -p "Default Admin Name ($dfl_admin_name): " _14_
	read -p "Default Admin Passwd ($dfl_admin_pass): " _15_

	write_config "$_1_" "$_2_" "$_3_" "$_4_" "$_5_" "$_6_" "$_7_" "$_8_" "$_9_" "$_10_" "$_11_" "$_12_" "$_13_" "$_14_" "$_15_"
}

print_config()
{
	if [ -f "$CONF_FILE" ]; then
		. $CONF_FILE
	fi

	echo -e "---------------------------------------------"
	echo -e "$FG_GREEN"
	echo -e "Project Path:         ${1:-$proj_path}"
	echo -e "Product Model:        ${2:-$model}"
	echo -e "Hardware Version:     ${3:-$hw}"
	echo -e "Flash Size:           ${4:-$flash}"
	echo -e "Firmware Version:     ${5:-$version}"
	echo -e "MIB Version:          ${6:-$version}"
	echo -e "Bootloader Version:   ${7:-$bootloader}"
	echo -e "CPU Chip Version:     ${8:-$cpu_chip}"
	echo -e "WiFi Chip Version:    ${9:-$wifi_chip}"
	echo -e "WiFi Version:         ${10:-$wifi}"
	echo -e "Default IP:           ${11:-$dfl_ipaddr}"
	echo -e "Default User Name:    ${12:-$dfl_user_name}"
	echo -e "Default User Passwd:  ${13:-$dfl_user_pass}"
	echo -e "Default Admin Name:   ${14:-$dfl_admin_name}"
	echo -e "Default Admin Passwd: ${15:-$dfl_admin_pass}"
	echo -e "$F6_END"
	echo -e "---------------------------------------------"

	exit 0
}

##########################################################################

function read_proj_info()
{
	if [ -f "$proj_path/build.env" ]; then
		$(grep MODEL_NAME $proj_path/build.env)
		$(grep CUSTOMER_FOLDER $proj_path/build.env)
		model=${MODEL_NAME}
		sed -i -e "/^model/c model=\"$model\"" $CONF_FILE
	else
		echo -e "$FG_RED[1] Please check your current project path!!$F6_END"
		exit 0
	fi

	cust_model_h="$proj_path/core/code/customer/${CUSTOMER_FOLDER}/inc/${model}/cust_model.h"
	if [ -f "$cust_model_h" ]; then
		version=$(grep "\<CM_CUSTOMER_FW_VERSION\>" $cust_model_h | cut -d '"' -f2)
		sed -i -e "/^version/c version=\"$version\"" $CONF_FILE
	else
		echo -e "$FG_RED[2] Please check your current project path!!$F6_END"
		exit 0
	fi

	issnvram="$proj_path/core/code/customer/${CUSTOMER_FOLDER}/defconfig/${MODEL_NAME}/issnvramdef.txt"
	if [ -f "$issnvram" ]; then
		dfl_ipaddr=$(grep "\<IP_ADDRESS\>" $issnvram | cut -d '=' -f2)
		sed -i -e "/^dfl_ipaddr/c dfl_ipaddr=\"$dfl_ipaddr\"" $CONF_FILE
	else
		dfl_ipaddr="192.168.10.200"
		echo -e "$FG_YELLOW[3] Please check your current project path!!$F6_END"
	fi

	boot_config="$proj_path/boot/uboot_rtk_switch/u-boot-2011.12/include/configs/cameo/trendnet_smart_series.h"
	echo $boot_config
	if [ -f "$boot_config" ]; then
		# Note: the search string need contain space, o else it will
		# get unnecessary line.
		bootloader=$(grep -m 1 " CAMEO_BOOT_VERSION " $boot_config | cut -d '"' -f2)
		sed -i -e "/^bootloader/c bootloader=\"$bootloader\"" $CONF_FILE
	else
		echo -e "$FG_YELLOW[4] Can't read boot version from source file!$F6_END"
		bootloader=1.00.005
	fi

	if [ -f "$proj_path/build.env" ]; then
		# uboot
		$(grep "export BOOT_GIT_BRANCH"  $proj_path/build.env)
		$(grep "export uboot_bcm_switch" $proj_path/build.env)
		$(grep "export uboot_mvl_switch" $proj_path/build.env)
		$(grep "export uboot_rtk_switch" $proj_path/build.env)

		# OS -Linux
		$(grep "export OS_GIT_BRANCH"    $proj_path/build.env)
		$(grep "export os_bcm_switch"    $proj_path/build.env)
		$(grep "export os_mvl_switch"    $proj_path/build.env)
		$(grep "export os_rtk_switch"    $proj_path/build.env)

		# SDK
		$(grep "export SDK_GIT_BRANCH"   $proj_path/build.env)
		$(grep "export sdk_bcm_switch"   $proj_path/build.env)
		$(grep "export sdk_mvl_switch"   $proj_path/build.env)
		$(grep "export sdk_rtk_switch"   $proj_path/build.env)

		# iCore
		$(grep "export ICORE_GIT_BRANCH" $proj_path/build.env)

		# customer
		$(grep "export CUST_CORE_GIT_BRANCH" $proj_path/build.env)
		$(grep "export cus_ati"          $proj_path/build.env)
		$(grep "export cus_cameo"        $proj_path/build.env)
		$(grep "export cus_dlink"        $proj_path/build.env)
		$(grep "export cus_netgear"      $proj_path/build.env)
		$(grep "export cus_dlinkg2"      $proj_path/build.env)
		$(grep "export cus_trendnet"     $proj_path/build.env)
		$(grep "export cus_soarnex"      $proj_path/build.env)

		if [ -f "$proj_path/make.h" ]; then
			git_build=bs_super
			git_icore=icore
			commit_build=$(cd $proj_path; git br | grep "^\*" | cut -d' ' -f3)
			commit_icore=$(cd $proj_path/core/code; git br | grep "^\*" | cut -d' ' -f3)

			if [ "$uboot_bcm_switch" = "YES" ]; then
				git_uboot=uboot_bcm_switch
			elif [ "$uboot_mvl_switch" = "YES" ]; then
				git_uboot=uboot_mvl_switch
			elif [ "$uboot_rtk_switch" = "YES" ]; then
				git_uboot=uboot_rtk_switch
			fi
			commit_uboot=$(cd $proj_path/boot/${git_uboot}; git br | grep "^\*" | cut -d' ' -f3)

			if [ "$os_bcm_switch" = "YES" ]; then
				git_linux=os_bcm_switch
			elif [ "$os_mvl_switch" = "YES" ]; then
				git_linux=os_mvl_switch
			elif [ "$os_rtk_switch" = "YES" ]; then
				git_linux=os_rtk_uClinux_switch
			fi
			commit_linux=$(cd $proj_path/os/${git_linux}; git br | grep "^\*" | cut -d' ' -f3)

			if [ "$sdk_bcm_switch" = "YES" ]; then
				git_sdk=sdk_bcm_switch
			elif [ "$sdk_mvl_switch" = "YES" ]; then
				git_sdk=sdk_mvl_switch
			elif [ "$sdk_rtk_switch" = "YES" ]; then
				git_sdk=sdk_rtk_switch
			fi
			commit_sdk=$(cd $proj_path/sdk/${git_sdk}; git br | grep "^\*" | cut -d' ' -f3)

			if [ "$cus_cameo" = "YES" ]; then
				git_cus=cus_cameo
			elif [ "$cus_ati" = "YES" ]; then
				git_cus=cus_ati
			elif [ "$cus_dlink" = "YES" ]; then
				git_cus=cus_dlink
			elif [ "$cus_dlinkg2" = "YES" ]; then
				git_cus=cus_dlinkg2
			elif [ "$cus_netgear" = "YES" ]; then
				git_cus=cus_netgear
			elif [ "$cus_soarnex" = "YES" ]; then
				git_cus=cus_soarnex
			fi
			commit_cus=$(cd $proj_path/core/code/customer/${CUSTOMER_FOLDER}; git br | grep "^\*" | cut -d' ' -f3)
		fi
	fi
}

function release_fw_hex()
{
	local proj_image="${proj_path}/image"
	local rar_fw_hex="$(echo ${model}-${version}-FW | sed -e 's/\./\-/g').rar"
	local src_fw_hex="$(echo ${model}-${version}-FW | sed -e 's/\./\-/g').hex"
	local release_fw_notes="${model}_FW_V${version}_ReleaseNotes.txt"

	cp -fav "$proj_image/$src_fw_hex"  .
	rar a "$rar_fw_hex" "$src_fw_hex"

	echo -e "${FG_PURPLE}${release_fw_notes}${F6_END}"
	echo "*******************************************************************************
* [PRODUCT NAME] : TRENDnet ${model} (FLASH: MX25L25635F) *
*******************************************************************************

 * ---------------------------------------------------------------------------
 * Date         Version    Description                             Author
 * ===========================================================================
 * ${MAKE_DATE}   ${version}   Initial Version                         Rain
 *----------------------------------------------------------------------------*/

_______________________________________________________________________________
RELEASE VERSION  : ${version}
RELEASE DATE     : ${MAKE_DATE}
FILE NAME        : ${src_fw_hex}
RELEASE BY       : Rain
_______________________________________________________________________________

[CHECK-CODE]    :
[FLASH-CHECKSUM]: [N/A]
[127-CHECKSUM]  : [N/A]
[FW-CHECKSUM]   : [N/A]
[BOOT-CHECKSUM] : [N/A]
[MD5-CHECKSUM]  : [N/A]
[PART-NO]       : [N/A]
[FLASH-CLEAR]   : [N/A]
[GIT]           :
   - BS         : ${_LINE1_}
   - Boot       : ${_LINE2_}
   - Core       : ${_LINE3_}
   - OS         : ${_LINE4_}
   - SDK        : ${_LINE5_}
   - Customer   : ${_LINE6_}
[TMPL-VER]      : [N/A]
[ECN-NO]        : [N/A]
[TP-TIME]       : [N/A]
[HW-VER]        : ${hw}
[FW-VER]        : V${version}
[UTIL-VER]      : [N/A]
[BOOT-VER]      : ${bootloader}
[PLM-NO]        : [N/A]
_____________________________________________________________________________
Default: (information involved is depended by products)
. Default IP :                  ${dfl_ipaddr}
. Default User Login:           ${dfl_user_name}/${dfl_user_pass}
. Default Admininstrator Login: ${dfl_admin_name}/${dfl_admin_pass}
. Default WAN Mode:
. Default DHCP Server:
_____________________________________________________________________________
Vendor Pkg Version:(information involved is depended by products)
. Boot        :
. SDK         : v2.1.5.67086-Candidate1
. LDK         :
. WIFI Driver :
. ADSL Driver :
_____________________________________________________________________________

New Features:
-------------

Bug Fixed:
-------------

Changed:
-------------

Know Issue:
-------------

Software Recommend Test Items:
-------------

_____________________________________[END]______________________________________" > ${release_fw_notes}
}

function release_all_hex()
{
	local proj_image="${proj_path}/image"
	local src_all_hex="$(echo ${1}-${version}-ALL | sed -e 's/\./\-/g').hex"
	local rar_all_hex="$(echo ${1}-${version}-ALL | sed -e 's/\./\-/g').rar"
	local release_all_notes="${1}_ALL_V${version}_ReleaseNotes.txt"

	cp -fav "$proj_image/$src_all_hex" .
	rar a "$rar_all_hex" "$src_all_hex"

	echo -e "${FG_PURPLE}${release_all_notes}${F6_END}"
	echo "*******************************************************************************
* [PRODUCT NAME] : TRENDnet ${1} (FLASH: MX25L25635F) *
*******************************************************************************

 * ---------------------------------------------------------------------------
 * Date         Version    Description                             Author
 * ===========================================================================
 * ${MAKE_DATE}   ${version}   Initial Version                         Rain
 *----------------------------------------------------------------------------*/

_______________________________________________________________________________
RELEASE VERSION  : ${version}
RELEASE DATE     : ${MAKE_DATE}
FILE NAME        : ${src_all_hex}
RELEASE BY       : Rain
_______________________________________________________________________________

[CHECK-CODE]    :
[FLASH-CHECKSUM]: [N/A]
[127-CHECKSUM]  : [N/A]
[FW-CHECKSUM]   : [N/A]
[BOOT-CHECKSUM] : [N/A]
[MD5-CHECKSUM]  : [N/A]
[PART-NO]       : [N/A]
[FLASH-CLEAR]   : [N/A]
[GIT]           :
   - BS         : ${_LINE1_}
   - Boot       : ${_LINE2_}
   - Core       : ${_LINE3_}
   - OS         : ${_LINE4_}
   - SDK        : ${_LINE5_}
   - Customer   : ${_LINE6_}
[TMPL-VER]      : [N/A]
[ECN-NO]        : [N/A]
[TP-TIME]       : [N/A]
[HW-VER]        : ${2}
[FW-VER]        : V${version}
[UTIL-VER]      : [N/A]
[BOOT-VER]      : ${bootloader}
[PLM-NO]        : [N/A]
_____________________________________________________________________________
Default: (information involved is depended by products)
. Default IP :                  ${dfl_ipaddr}
. Default User Login:           ${dfl_user_name}/${dfl_user_pass}
. Default Admininstrator Login: ${dfl_admin_name}/${dfl_admin_pass}
. Default WAN Mode:
. Default DHCP Server:
_____________________________________________________________________________
Vendor Pkg Version:(information involved is depended by products)
. Boot        :
. SDK         : v2.1.5.67086-Candidate1
. LDK         :
. WIFI Driver :
. ADSL Driver :
_____________________________________________________________________________

New Features:
-------------

Bug Fixed:
-------------

Changed:
-------------

Know Issue:
-------------

Software Recommend Test Items:
-------------

_____________________________________[END]______________________________________" > ${release_all_notes}
}

function release_precode()
{
	local proj_image="${proj_path}/image"
	local src_precode="$(echo ${1}-${version}-PRECODE | sed -e 's/\./\-/g').bin"
	local rar_precode="$(echo ${1}-${version}-PRECODE | sed -e 's/\./\-/g').rar"
	local release_all_notes="${1}_PRECODE_V${version}_ReleaseNotes.txt"

	cp -fav "$proj_image/$src_precode" .
	rar a "$rar_precode" "$src_precode"

	echo -e "${FG_PURPLE}${release_all_notes}${F6_END}"
	echo "*******************************************************************************
* [PRODUCT NAME] : TRENDnet ${1} (FLASH: MX25L25635F) *
*******************************************************************************

 * ---------------------------------------------------------------------------
 * Date         Version    Description                             Author
 * ===========================================================================
 * ${MAKE_DATE}   ${version}   Initial Version                         Rain
 *----------------------------------------------------------------------------*/

_______________________________________________________________________________
RELEASE VERSION  : ${version}
RELEASE DATE     : ${MAKE_DATE}
FILE NAME        : ${src_precode}
RELEASE BY       : Rain
_______________________________________________________________________________

[CHECK-CODE]    :
[FLASH-CHECKSUM]:
[127-CHECKSUM]  : [N/A]
[FW-CHECKSUM]   :
[BOOT-CHECKSUM] :
[MD5-CHECKSUM]  : [N/A]
[PART-NO]       :
[FLASH-CLEAR]   : 0x00
[GIT]           :
   - BS         : ${_LINE1_}
   - Boot       : ${_LINE2_}
   - Core       : ${_LINE3_}
   - OS         : ${_LINE4_}
   - SDK        : ${_LINE5_}
   - Customer   : ${_LINE6_}
[TMPL-VER]      : [N/A]
[ECN-NO]        : [N/A]
[TP-TIME]       : [N/A]
[HW-VER]        : ${2}
[FW-VER]        : V${version}
[UTIL-VER]      : [N/A]
[BOOT-VER]      : ${bootloader}
[PLM-NO]        : [N/A]
_____________________________________________________________________________
Default: (information involved is depended by products)
. Default IP :                  ${dfl_ipaddr}
. Default User Login:           ${dfl_user_name}/${dfl_user_pass}
. Default Admininstrator Login: ${dfl_admin_name}/${dfl_admin_pass}
. Default WAN Mode:
. Default DHCP Server:
_____________________________________________________________________________
Vendor Pkg Version:(information involved is depended by products)
. Boot        :
. SDK         : v2.1.5.67086-Candidate1
. LDK         :
. WIFI Driver :
. ADSL Driver :
_____________________________________________________________________________

New Features:
-------------

Bug Fixed:
-------------

Changed:
-------------

Know Issue:
-------------

Software Recommend Test Items:
-------------

_____________________________________[END]______________________________________" > ${release_all_notes}
}

function release_mib()
{
	local mib_file="$(echo ${1}-MIB_V${version}| sed -e 's/\./\-/g').mib"
	local mib_release_notes="${1}_MIB_V${mib_version}_ReleaseNotes.txt"

	echo -e "${FG_PURPLE}${mib_release_notes}${F6_END}"
	echo "*******************************************************************************
* [PRODUCT NAME] : TRENDnet ${1} (FLASH: MX25L25635F) *
*******************************************************************************

 * ---------------------------------------------------------------------------
 * Date         Version    Description                             Author
 * ===========================================================================
 * ${MAKE_DATE}   ${version}   Initial Version                         Rain
 *----------------------------------------------------------------------------*/

_______________________________________________________________________________
FILE NAME        : ${mib_file}
RELEASE VERSION  : ${version}
RELEASE DATE     : ${MAKE_DATE}
RELEASE BY       : Rain
_______________________________________________________________________________

[CHECK-CODE]    :
[FLASH-CHECKSUM]: [N/A]
[127-CHECKSUM]  : [N/A]
[FW-CHECKSUM]   : [N/A]
[BOOT-CHECKSUM] : [N/A]
[MD5-CHECKSUM]  : [N/A]
[PART-NO]       : [N/A]
[FLASH-CLEAR]   : [N/A]
[GIT]           :
   - BS         : ${_LINE1_}
   - Boot       : ${_LINE2_}
   - Core       : ${_LINE3_}
   - OS         : ${_LINE4_}
   - SDK        : ${_LINE5_}
   - Customer   : ${_LINE6_}
[TMPL-VER]      : [N/A]
[ECN-NO]        : [N/A]
[TP-TIME]       : [N/A]
[HW-VER]        : [N/A]
[FW-VER]        : [N/A]
[UTIL-VER]      : [N/A]
[BOOT-VER]      : [N/A]
[PLM-NO]        : [N/A]
_____________________________________________________________________________

New Features:
-------------

Bug Fixed:
-------------

Changed:
-------------

Know Issue:
-------------

Software Recommend Test Items:
-------------

_____________________________________[END]______________________________________" > ${mib_release_notes}
}

function release_firmware()
{
	local proj_image="${proj_path}/image"

	# check compiled image path
	if [ ! -d "${proj_image}" ]; then
		echo -e "${FG_RED}Please compile your project before this release!${F6_END}"
		exit 0
	fi

	# where to store
	DEST_PATH=${PWD}/${DATE_TIME}-${version}
	MAKE_DATE=${DATE_TIME:0:4}/${DATE_TIME:4:2}/${DATE_TIME:6:2}

	mkdir -p  ${DEST_PATH}
	cd $DEST_PATH

	_LINE1_=$(printf "%-24s%-17s-%-9s%s" ${git_build} "dev"                   ${commit_build} "for Build system")
	_LINE2_=$(printf "%-24s%-17s-%-9s%s" ${git_uboot} ${BOOT_GIT_BRANCH}      ${commit_uboot} "for Boot")
	_LINE3_=$(printf "%-24s%-17s-%-9s%s" ${git_icore} ${ICORE_GIT_BRANCH}     ${commit_icore} "for Core")
	_LINE4_=$(printf "%-24s%-17s-%-9s%s" ${git_linux} ${OS_GIT_BRANCH}        ${commit_linux} "for OS")
	_LINE5_=$(printf "%-24s%-17s-%-9s%s" ${git_sdk}   ${SDK_GIT_BRANCH}       ${commit_sdk}   "for SDK")
	_LINE6_=$(printf "%-24s%-17s-%-9s%s" ${git_cus}   ${CUST_CORE_GIT_BRANCH} ${commit_cus}   "for Customer")

	release_fw_hex

	for i in $(seq ${#model_array[*]})
	do
		if [ "${model_array[i-1]}" != "RESERVED" ]; then
			release_all_hex ${model_array[i-1]} ${hw_version[i-1]} ${chip_type[i-1]}
			release_precode ${model_array[i-1]} ${hw_version[i-1]} ${chip_type[i-1]}
			release_mib     ${model_array[i-1]} ${hw_version[i-1]} ${chip_type[i-1]}
		fi
	done
}

function print_ptr_info
{
	for i in $(seq ${#model_array[*]})
	do
		if [ "${model_array[i-1]}" != "RESERVED" ]; then
			echo -e "${i}. ${model_array[i-1]}"
			echo -e ""
			echo -e "HW version: ${hw_version[i-1]}"
			echo -e "Main Chip: RTK (${chip_type[i-1]}*1)"
			echo -e "Flash: MX25L25635F (32MB)"
			echo -e "RAM: 256MB"
			echo -e "FW: ${model_array[i-1]}-1-00-011-ALL.rar"
			echo -e "SPEC: TRENDnet_FWFL_3_0_8.xlsx"
			echo -e "ReleaseNote: ${model_array[i-1]}_ALL_V1.00.011_ReleaseNotes.txt"
			echo -e "ftp://172.22.102.203/Project/Switch/Trendnet(Rtl)/firmware/SFW/${model}/V${version}/ptr"
			echo -e ""
		fi
	done
}

############################################################
#                        Main Entry                        #
############################################################

if [ $# -gt 0 ]; then
	if [ "$1" = "h" ] || [ "$1" = "-h" ]; then
		print_usage
	elif [ "$1" = "p" ] || [ "$1" = "-p" ]; then
		print_config
	elif [ "$1" = "c" ] || [ "$1" = "-c" ]; then
		if [ -f "$CONF_FILE" ]; then
			. $CONF_FILE
		fi
		reset_config
	fi
else
	# load config file
	if [ -f "$CONF_FILE" ]; then
		. $CONF_FILE
	else
		reset_config
	fi
fi

read_proj_info
release_firmware
print_ptr_info
